[gd_scene load_steps=3 format=3 uid="uid://c8048kcgnofr5"]

[ext_resource type="Texture2D" uid="uid://bxg44gn0bmjva" path="res://icon.svg" id="1_oho0l"]
[ext_resource type="Script" path="res://addons/compute_shader_studio/compute_shader_studio_2d.gd" id="2_tleyh"]

[node name="RayTracing" type="Node2D"]

[node name="ComputeShaderStudio2D" type="Node" parent="." node_paths=PackedStringArray("data")]
script = ExtResource("2_tleyh")
print_step = true
GLSL_code = "// data_0 is for the \"retina\". data_1 is for the matrix.
void main() {
	// TODO: Look up what do these stand for
	uint x = gl_GlobalInvocationID.x; 
	uint y = gl_GlobalInvocationID.y;
	uint p = x + y * WSX;

	// Init
	if (step == 0)  {
		if ( ( (x/16+y/16) ) % 2 == 0)
			data_1[p] =  0xFFFFFFFF;
		else
			data_1[p] = 0xFFFFFFFF ;
	}

	// RayTracing
	float pos_mat_3D_x = 100.0 * sin(step/100.0);
	float pos_mat_3D_y = 0.0f ;
	float pos_mat_3D_z = 0.0f ;

	float pos_mat_ret_x = 64;
	float pos_mat_ret_y = 64;
	float pos_mat_ret_z = 64;

	float size_mat_ret = 32.0;

	float pos_eye_x = 64.0;
	float pos_eye_y = 64.0;
	float pos_eye_z = 100.0;

	float pos_ray_x = x * size_mat_ret / 128.0 + pos_mat_ret_x; 
	float pos_ray_y = y * size_mat_ret / 128.0 + pos_mat_ret_y;
	float pos_ray_z = pos_mat_ret_z;

	float dir_ray_x = ( pos_ray_x - pos_eye_x ) ;
	float dir_ray_y = ( pos_ray_y - pos_eye_y ) ;
	float dir_ray_z = ( pos_ray_z - pos_eye_z ) ;

	int color = int(dir_ray_y * 1000) +  0xFF000000;

	// L for Length, Here it's the length of the ray vector
	float L = sqrt( (dir_ray_x*dir_ray_x) + (dir_ray_y*dir_ray_y) + (dir_ray_z*dir_ray_z)); 
	L = L/4.0;
	dir_ray_x = dir_ray_x / L ;
	dir_ray_y = dir_ray_y / L ;
	dir_ray_z = dir_ray_z / L ;

	if(step > 0) {
		for (int i = 0; i < 1000; i++) {
			// Is in 3D Matrix ? Color it white
		 	if (pos_ray_x >= pos_mat_3D_x && pos_ray_y >= pos_mat_3D_y   && pos_ray_x < (pos_mat_3D_x + 128) && 	pos_ray_y < (pos_mat_3D_y + 128) ) {
				int pos_ray = int(pos_ray_x) + int(pos_ray_y) * 128;
				if (data_1[pos_ray] > 0) color = 0x99999999;
			}
			pos_ray_x += dir_ray_x;
			pos_ray_y += dir_ray_y;
			pos_ray_z += dir_ray_z;
		}
		data_0[p] = color;
// && pos_ray_z >= pos_mat_3D_z
// && pos_ray_z < (pos_mat_3D_z+1) 
	}
}
"
data = [NodePath("../Retina"), NodePath("../Matrice3D")]

[node name="Retina" type="Sprite2D" parent="."]
position = Vector2(229, 240)
scale = Vector2(2.875, 2.73438)
texture = ExtResource("1_oho0l")

[node name="Label" type="Label" parent="Retina"]
offset_left = -24.0
offset_top = -86.3086
offset_right = 26.0
offset_bottom = -63.3086
text = "Retina"

[node name="Matrice3D" type="Sprite2D" parent="."]
position = Vector2(666.5, 243.5)
scale = Vector2(2.69531, 2.71094)
texture = ExtResource("1_oho0l")

[node name="Label" type="Label" parent="Matrice3D"]
offset_left = -38.029
offset_top = -89.8213
offset_right = 37.971
offset_bottom = -66.8213
text = "3D Matrix"
